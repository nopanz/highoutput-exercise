{
  "dependencies": {
    "ajv": "^6.12.3",
    "apollo-server-koa": "^2.9.7",
    "dataloader": "^2.0.0",
    "graphql": "^14.5.8",
    "koa": "^2.11.0",
    "merge-graphql-schemas": "^1.7.3",
    "module-alias": "^2.2.2",
    "mongoose": "^5.7.10",
    "ramda": "^0.26.1",
    "redis": "^2.8.0"
  },
  "devDependencies": {
    "@types/chai": "^4.2.5",
    "@types/graphql": "^14.5.0",
    "@types/koa": "^2.0.52",
    "@types/mocha": "^5.2.7",
    "@types/mongoose": "^5.5.30",
    "@types/node": "^12.12.7",
    "@types/ramda": "^0.26.33",
    "@types/redis": "^2.8.14",
    "@types/supertest": "^2.0.8",
    "@typescript-eslint/eslint-plugin": "^2.7.0",
    "@typescript-eslint/parser": "^2.7.0",
    "chai": "^4.2.0",
    "eslint": "^6.6.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-config-prettier": "^6.5.0",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-json": "^2.0.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-prettier": "^3.1.1",
    "eslint-plugin-react": "^7.16.0",
    "mocha": "^6.2.2",
    "nodemon": "^1.19.4",
    "prettier": "^1.19.1",
    "supertest": "^4.0.2",
    "ts-node": "^8.5.0",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.7.2"
  },
  "scripts": {
    "serve:dev": "nodemon",
    "build": "rimraf ./build && tsc",
    "start": "npm run build && node build/index.js",
    "test": "mocha"
  },
  "_moduleAliases": {
    "@app": "build/app",
    "@config": "build/config"
  },
  "name": "highoutput-exercise",
  "description": "The goal of this exercise is to implement an API service based on the given `GraphQL` schema. The code base must be written in `Typescript` and must run on top of `NodeJS`. The environment, including the third party services such as the database and the cache, must be setup using `docker-compose` and must start by running `docker-compose up -d`. The API service must start by running `npm start`. Unit and/or integration tests must be written and must cover at least 80% of the code base. Any database technology may be used in the implementation.",
  "version": "1.0.0",
  "main": "src/index.ts",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nopanz/highoutput-exercise.git"
  },
  "author": "Rey Aleonar",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/nopanz/highoutput-exercise/issues"
  },
  "homepage": "https://github.com/nopanz/highoutput-exercise#readme"
}
